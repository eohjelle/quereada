// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Source {
  name             String      @id @unique
  source_class     String // would be useful to have an enum of possible source types, but not supported with current database. todo: rename to source_class?
  url              String?
  date_added       DateTime    @default(now())
  channels         Channel[]
  items            Item[]
  // occurs_with_topic_group TopicGroup[]
  occurs_in_blocks FeedBlock[]
}

model Channel {
  id           Int    @id @default(autoincrement())
  channel_name String
  source       Source @relation(fields: [source_name], references: [name])
  source_name  String

  @@unique([source_name, channel_name])
}

model Language {
  id   String @id @unique
  name String
  Item Item[]
}

model Topic {
  topic        String       @id @unique
  topic_groups TopicGroup[]
}

model TopicGroup {
  title                      String      @id @unique
  topics                     Topic[]
  checked_relevance_to_items Item[]      @relation("checked_relevance_of_items_to_topic_group")
  relevant_to_items          Item[]      @relation("items_relevant_to_topic_group")
  // occurs_in_block_with_sources    Source[]
  occurs_in_blocks           FeedBlock[]
}

model Author {
  name  String @id @unique // todo: make a system where author names are not required to be unique
  items Item[]
}

model Item {
  id                                Int          @id @default(autoincrement())
  // item_type                  ItemType  @default(Link) // see below; enums are not supported for SQLite
  item_type                         String       @default("Link")
  source                            Source       @relation(fields: [source_name], references: [name])
  source_name                       String
  language                          Language?    @relation(fields: [lang_id], references: [id])
  lang_id                           String?
  title                             String
  description                       String?
  link                              String       @unique
  authors                           Author[]
  date_published                    DateTime?
  date_added                        DateTime     @default(now())
  likes                             Int?
  comments_link                     String?
  comments_summary                  String?
  content                           String?
  number_of_words                   Int?
  summarizable                      Boolean      @default(false)
  summary                           String?
  image_link                        String?
  image_caption                     String?
  image_credit                      String?
  checked_relevance_to_topic_groups TopicGroup[] @relation("checked_relevance_of_items_to_topic_group")
  relevant_topic_groups             TopicGroup[] @relation("items_relevant_to_topic_group")
  seen                              Boolean      @default(false)
  read_later                        Boolean      @default(false)
  saved                             Boolean      @default(false)
}

model FeedBlock {
  id                    Int          @id @default(autoincrement())
  header                String       @unique
  prisma_query          String // This should be a JSON string which can be jsonified into a valid query for the Prisma client's findMany method
  contains_sources      Source[]
  contains_topic_groups TopicGroup[]
  occurs_in_feed        Feed[]
}

model Feed {
  id     Int         @id @default(autoincrement())
  title  String      @unique
  blocks FeedBlock[]
}

// enum ItemType {
//   Link
//   FullTextArticle
// }
