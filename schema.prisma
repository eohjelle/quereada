// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./store.db"
}

model Source {
  name         String    @id @unique
  source_class String
  url          String?
  date_added   DateTime  @default(now())
  channels     Channel[]
  items        Item[]
}

model Channel {
  id           Int    @id @default(autoincrement())
  channel_name String
  source       Source @relation(fields: [source_name], references: [name])
  source_name  String

  @@unique([source_name, channel_name])
}

model Language {
  id   String  @id @unique
  name String?
  Item Item[]
}

model Filter {
  title          String  @id @unique
  implementation String
  args           String? // stringified JSON
  items_checked  Item[]  @relation("item_checked_filter")
  items_passed   Item[]  @relation("item_passed_filter")
}

model Author {
  name  String @id @unique // todo: make a system where author names are not required to be unique
  items Item[]
}

model Item {
  id                Int       @id @default(autoincrement())
  item_type         String    @default("Link")
  source            Source    @relation(fields: [source_name], references: [name])
  source_name       String
  language          Language? @relation(fields: [lang_id], references: [id])
  lang_id           String?
  title             String
  description       String?
  link              String    @unique
  authors           Author[]
  date_published    DateTime?
  date_added        DateTime  @default(now())
  likes             Int?
  comments_link     String?
  comments_summary  String?
  content           String?
  number_of_words   Int?
  summarizable      Boolean   @default(false)
  summary           String?
  image_link        String?
  image_caption     String?
  image_credit      String?
  read_later        Boolean   @default(false)
  saved             Boolean   @default(false)
  filters_checked   Filter[]  @relation("item_checked_filter")
  filters_passed    Filter[]  @relation("item_passed_filter")
  seen              Int       @default(0)
  seen_in_blocks    Block[]   @relation("item_seen_in_blocks")
  seen_in_feeds     Feed[]    @relation("item_seen_in_feeds")
  clicks            Int       @default(0)
  clicked_in_blocks Block[]   @relation("item_clicked_in_blocks")
  clicked_in_feeds  Feed[]    @relation("item_clicked_in_feeds")
}

model Block {
  title                         String                @id @unique
  query                         String // This should be a JSON string which can be jsonified into a valid query for the Prisma client's findMany method
  stop_loading_if_not_items_for Int?
  feeds                         OrderedBlocksInFeed[]
  seen_items                    Item[]                @relation("item_seen_in_blocks")
  clicked_items                 Item[]                @relation("item_clicked_in_blocks")
}

model Feed {
  index         Int // It will be unique, but it's easier to not enforce uniqueness becauuse of how load_config works
  title         String                @id @unique
  blocks        OrderedBlocksInFeed[]
  seen_items    Item[]                @relation("item_seen_in_feeds")
  clicked_items Item[]                @relation("item_clicked_in_feeds")
}

model OrderedBlocksInFeed {
  id          Int    @id @default(autoincrement())
  block       Block  @relation(fields: [block_title], references: [title])
  block_title String
  feed        Feed   @relation(fields: [feed_title], references: [title])
  feed_title  String
  index       Int

  @@unique([feed_title, block_title, index])
}
