// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Source {
  name        String    @id @unique
  source_type String // would be useful to have an enum of possible source types, but not supported with current database. todo: rename to source_class?
  url         String?
  date_added  DateTime  @default(now())
  channels    Channel[]
  Item        Item[]
}

model Channel {
  id           Int    @id @default(autoincrement())
  channel_name String
  source       Source @relation(fields: [source_name], references: [name])
  source_name  String

  @@unique([source_name, channel_name])
}

model Language {
  id   String @id @unique
  name String
  Item Item[]
}

model Topic {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  interest Boolean @default(false)
  avoid    Boolean @default(false)
  Item     Item?   @relation(fields: [itemId], references: [id])
  itemId   Int?
}

model Author {
  name  String @id @unique // todo: make a system where author names are not required to be unique
  items Item[]
}

model Item {
  id                         Int       @id @default(autoincrement())
  // item_type                  ItemType  @default(Link) // see below; enums are not supported for SQLite
  item_type                  String    @default("Link")
  source                     Source    @relation(fields: [source_name], references: [name])
  source_name                String
  language                   Language? @relation(fields: [lang_id], references: [id])
  lang_id                    String?
  title                      String
  description                String?
  link                       String    @unique
  authors                    Author[]
  date_published             DateTime?
  date_added                 DateTime  @default(now())
  likes                      Int?
  comments_link              String?
  comments_summary           String?
  content                    String?
  number_of_words            Int?
  summary                    String?
  image_link                 String?
  image_caption              String?
  image_credit               String?
  topics                     Topic[]
  relevant_to_interest_topic Boolean   @default(false)
  relevant_to_avoid_topic    Boolean   @default(false)
  seen                       Boolean   @default(false)
  read_later                 Boolean   @default(false)
  saved                      Boolean   @default(false)
}

// enum ItemType {
//   Link
//   FullTextArticle
// }
